pipeline{
    agent {
        label 'AGA-Agent'
    }
    environment{
        AWS_REGION = 'us-east-2'
        scannerHome = tool 'SonarScanner'
    }
    stages {
        stage('Build'){
            steps{
                sh(script: "/bin/bash -c 'touch .env && printenv > .env'")
                sh 'go build -o app .'
            }
        }
        stage('Testing'){
            steps{
                sh 'go test -v ./...'
            }
        }
        stage('SonarQube analysis'){
            steps{
                withSonarQubeEnv('sonar-cloud'){
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }
        stage("Quality Gate"){
            steps {
              timeout(time: 15, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
        }
        stage('Docker-building'){
            steps{
                sh 'docker build -t dop:latest .'
            }
        }
        stage('Deploying'){
            steps{
                    withAWS(credentials: 'AWS-Key', region: env.AWS_REGION){
                    sh "aws ecr get-login-password --region ${env.AWS_REGION} | docker login --username AWS --password-stdin 467346434923.dkr.ecr.${env.AWS_REGION}.amazonaws.com"
                    sh 'docker tag dop:latest 467346434923.dkr.ecr.us-east-2.amazonaws.com/dop:latest'
                    sh 'docker push 467346434923.dkr.ecr.us-east-2.amazonaws.com/dop:latest'
                }
            }
        }
    }
}